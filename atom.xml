<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>不会写代码的架构师不是好程序猿</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://blog.aosabook.cc/"/>
  <updated>2018-08-02T07:27:15.000Z</updated>
  <id>http://blog.aosabook.cc/</id>
  
  <author>
    <name>老曹同学</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Building Cloud Applications with Microserivce Architecture</title>
    <link href="http://blog.aosabook.cc/2018/08/02/Building-Cloud-Applications-with-Microserivce-Architecture/"/>
    <id>http://blog.aosabook.cc/2018/08/02/Building-Cloud-Applications-with-Microserivce-Architecture/</id>
    <published>2018-08-02T07:27:15.000Z</published>
    <updated>2018-08-02T07:27:15.000Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Modern Technologies for Modern Web Applications</title>
    <link href="http://blog.aosabook.cc/2018/07/26/Modern-Technologies-for-Modern-Web-Applications/"/>
    <id>http://blog.aosabook.cc/2018/07/26/Modern-Technologies-for-Modern-Web-Applications/</id>
    <published>2018-07-26T07:47:59.000Z</published>
    <updated>2018-08-02T07:34:52.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Modern-Web-Application"><a href="#Modern-Web-Application" class="headerlink" title="Modern Web Application"></a>Modern Web Application</h1><p>当前的企业信息系统一般采用Web技术进行设计和开发，如图所示。</p><img src="http://pctozmwcv.bkt.clouddn.com//images/webtech/webapp.png"><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><h1 id="架构"><a href="#架构" class="headerlink" title="架构"></a>架构</h1>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Modern-Web-Application&quot;&gt;&lt;a href=&quot;#Modern-Web-Application&quot; class=&quot;headerlink&quot; title=&quot;Modern Web Application&quot;&gt;&lt;/a&gt;Modern Web Applicati
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>About This Blog</title>
    <link href="http://blog.aosabook.cc/2018/07/26/hello-world/"/>
    <id>http://blog.aosabook.cc/2018/07/26/hello-world/</id>
    <published>2018-07-26T07:00:29.000Z</published>
    <updated>2018-07-26T07:00:29.000Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Architecting a Distributed File System with Microservices</title>
    <link href="http://blog.aosabook.cc/2018/06/19/Architecting-a-Distributed-File-System-with-Microservices/"/>
    <id>http://blog.aosabook.cc/2018/06/19/Architecting-a-Distributed-File-System-with-Microservices/</id>
    <published>2018-06-19T14:29:52.000Z</published>
    <updated>2018-07-26T07:00:29.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="总体要求"><a href="#总体要求" class="headerlink" title="总体要求"></a>总体要求</h2><p>基于微服务架构，设计一个分布式文件系统。</p><h4 id="功能要求："><a href="#功能要求：" class="headerlink" title="功能要求："></a>功能要求：</h4><ol><li>基于Spring Boot实现NameNode和DataNode两个服务，在Spring Cloud微服务平台上运行一个NameNode实例和多个DataNode实例（无需考虑NameNode单点失效问题）</li><li>NameNode提供REST风格接口与用户交互，实现用户文件上传、下载、删除，DataNode不与用户直接交互（无需考虑NameNode的IO瓶颈问题）</li><li>NameNode将用户上传文件文件拆为固定大小的存储块，分散存储在各个DataNode上，每个块保存若干副本。块大小和副本数可通过系统参数配置。</li></ol><h3 id="非功能性要求："><a href="#非功能性要求：" class="headerlink" title="非功能性要求："></a>非功能性要求：</h3><ol><li>DataNode服务可弹性扩展，每次启动一个DataNode服务NameNode可发现并将其纳入整个系统</li><li>NameNode负责检查各DataNode健康状态，需模拟某个DataNode下线时NameNode自动在其他DataNode上复制（迁移）该下线服务原本保存的数据块</li><li>NameNode在管理数据块存储和迁移过程中应实现一定策略尽量保持各DataNode的负载均衡</li><li>提供一个namenode上的前端页面</li></ol><h3 id="接口示例："><a href="#接口示例：" class="headerlink" title="接口示例："></a>接口示例：</h3><ul><li><code>GET /</code> - 列出文件系统<code>/</code>目录内容</li><li><code>GET /user1/a.docx</code> - 下载<code>/user1/a.docx</code>文件</li><li><code>PUT /user2/b.zip</code> - 上传<code>b.zip</code>文件到<code>/user2</code>目录</li><li><code>DEL /user2/b.zip</code> - 删除<code>/user2</code>目录下<code>b.zip</code>文件</li></ul><h2 id="示例代码"><a href="#示例代码" class="headerlink" title="示例代码"></a>示例代码</h2><p><a href="https://github.com/njuics/dev-mdfs" target="_blank" rel="noopener">https://github.com/njuics/dev-mdfs</a></p><h3 id="工程简介"><a href="#工程简介" class="headerlink" title="工程简介"></a>工程简介</h3><p>示例代码为一个Maven构建管理的Java工程，工程包含若干模块，每个模块又是一个Maven管理的Java工程，各自实现一个微服务实体，包括微服务架构中的基础设施服务（如Config Service、Discovery Service和Tracing Service等）。顶层工程除POM文件外不包含其他源代码，该POM文件定义了各个模块共享的Maven属性、依赖和插件等。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.5.14.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>info.nemoworks.mdfs<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mdfs-system<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>$&#123;project.artifactId&#125;<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">modules</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">module</span>&gt;</span>mdfs-config-server<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">modules</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">assertj.version</span>&gt;</span>3.10.0<span class="tag">&lt;/<span class="name">assertj.version</span>&gt;</span></span><br><span class="line">        ...</span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-sleuth-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;sleuth.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            ...</span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   ...</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p><a href="https://maven.apache.org/pom.html" target="_blank" rel="noopener">POM</a> stands for “Project Object Model”. It is an XML representation of a Maven project held in a file named pom.xml. </p></blockquote><h4 id="Config-Server"><a href="#Config-Server" class="headerlink" title="Config Server"></a>Config Server</h4><blockquote><p><a href="https://cloud.spring.io/spring-cloud-config/" target="_blank" rel="noopener">Spring Cloud Config</a> provides server and client-side support for externalized configuration in a distributed system. With the Config Server you have a central place to manage external properties for applications across all environments.</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@EnableConfigServer</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ConfigServerApplication</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(ConfigServerApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们通过<code>@EnableConfigServer</code>直接让Spring Boot启动一个Config Server。Spring Boot是个神器，会自动按你这个Annotation运行一个特定的<code>SpringBootApplication</code></p><blockquote><p><a href="https://spring.io/projects/spring-boot" target="_blank" rel="noopener">Spring Boot</a> makes it easy to create stand-alone, production-grade Spring based Applications that you can “just run”.</p></blockquote><p>注意，Spring Boot目前最新版是<code>2.0.x</code>，但最新版与Spring Cloud 的最新版       <code>Edgware.SR3</code>似乎尚不兼容，所以我们还是用<code>1.5.14.RELEASE</code>这个版本的Spring Boot。请注意看顶层POM文件内容。</p><p>与Spring Petclinic的Microserice版本不同，为了避免麻烦，我将Config Server提供的config数据放在<code>resources</code>目录下，你可以看到一堆yml文件。其中的<code>application.yml</code>是当前Config Server的应用运行参数</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">server.port:</span> <span class="number">8888</span></span><br><span class="line"></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line"><span class="attr">  application:</span></span><br><span class="line"><span class="attr">     name:</span> <span class="string">config-server</span></span><br><span class="line"><span class="attr">  profiles:</span></span><br><span class="line"><span class="attr">     active:</span> <span class="string">native</span></span><br></pre></td></tr></table></figure><p><code>profiles.active=native</code>代表用本地文件作为config来源，这个本地文件默认会搜索classpath（resources目录是在classpath中的），或者你通过<code>file:///...</code>去指定，具体参考<a href="https://cloud.spring.io/spring-cloud-config/multi/multi__spring_cloud_config_server.html" target="_blank" rel="noopener">Spring Cloud文档</a>。</p><p>其他yml文件为每个其他服务对应的参数配置，启动Config Server后可以用curl命令看看内容是否正确。例如：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl http://localhost:8888/discovery-server/default</span><br></pre></td></tr></table></figure><h4 id="Discovery-Server"><a href="#Discovery-Server" class="headerlink" title="Discovery Server"></a>Discovery Server</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@EnableEurekaServer</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DiscoveryServerApplication</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">SpringApplication.run(DiscoveryServerApplication.class, args);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如同Config Server， 我们通过<code>@EnableEurekaServer</code>直接让Spring Boot启动一个 Discovery Server，或者叫Service Registry。这个Server实际上是Netflix这个不务正业的视频网站开发的一个微服务平台中的一个组件<code>Eureka</code>，Spring Cloud集成了这个组件。Eureka这个词源自希腊，用以表达发现某件事物、真相时的感叹词。关于这个服务，请参考Spring的文档。</p><blockquote><p><a href="https://spring.io/blog/2015/01/20/microservice-registration-and-discovery-with-spring-cloud-and-netflix-s-eureka" target="_blank" rel="noopener">A service registry</a> is a phone book for your microservices. Each service registers itself with the service registry and tells the registry where it lives (host, port, node name) and perhaps other service-specific metadata - things that other services can use to make informed decisions about it. Clients can ask questions about the service topology (“are there any ‘fulfillment-services’ available, and if so, where?”) and service capabilities (“can you handle X, Y, and Z?”). You probably already use a technology that has some notion of a cluster (Cassandra, Memcached, etc.), and that information is ideally stored in a service registry. There are several popular options for service registries. Netflix built and then open-sourced their own service registry, Eureka. Another new, but increasingly popular option is Consul. We’ll look principally at some of the integration between Spring Cloud and Netflix’s Eureka service registry.</p></blockquote><p>注意，你如果使用版本号大于<code>8</code>的Java环境可能会导致错误。具体原因和解决方法以后再说。</p><h3 id="TBC"><a href="#TBC" class="headerlink" title="TBC"></a>TBC</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;总体要求&quot;&gt;&lt;a href=&quot;#总体要求&quot; class=&quot;headerlink&quot; title=&quot;总体要求&quot;&gt;&lt;/a&gt;总体要求&lt;/h2&gt;&lt;p&gt;基于微服务架构，设计一个分布式文件系统。&lt;/p&gt;
&lt;h4 id=&quot;功能要求：&quot;&gt;&lt;a href=&quot;#功能要求：&quot; class
      
    
    </summary>
    
    
  </entry>
  
</feed>
